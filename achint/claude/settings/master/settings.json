{
    "$schema": "https://json.schemastore.org/claude-code-settings.json",
    "permissions": {
      "allow": [
        "Read",
        "Edit",
        "MultiEdit",
        "Write",
        "Glob",
        "Grep",
        "LS",
        "Search",
        "TodoRead",
        "TodoWrite",
        "Task",
        "Git",
        "Bash(git:*)",
        "Bash(pnpm:*)",
        "Bash(node:*)",
        "Bash(python:*)",
        "Bash(pip:*)",
        "Bash(cargo:*)",
        "Bash(make:*)",
        "Bash(yarn:*)",
        "Pnpm",
        "Pip",
        "Cargo",
        "Bash(jest:*)",
        "Bash(vitest:*)",
        "Bash(pytest:*)",
        "Jest",
        "Vitest",
        "Pytest",
        "Bash(ls:*)",
        "Bash(cd:*)",
        "Bash(pwd:*)",
        "Bash(cat:*)",
        "Bash(head:*)",
        "Bash(tail:*)",
        "Bash(find:*)",
        "Bash(grep:*)",
        "Bash(rg:*)",
        "Bash(echo:*)",
        "Bash(curl:*)",
        "Bash(wget:*)",
        "Bash(jq:*)",
        "Bash(sed:*)",
        "Bash(awk:*)",
        "Bash(sort:*)",
        "Bash(uniq:*)",
        "Bash(wc:*)",
        "Bash(docker build:*)",
        "Bash(docker run:*)",
        "Bash(docker ps:*)",
        "Bash(docker logs:*)",
        "Bash(docker exec:*)",
        "Bash(docker-compose:*)",
        "Bash(kubectl get:*)",
        "Bash(kubectl describe:*)",
        "Bash(kubectl logs:*)",
        "Bash(kubectl apply:*)",
        "Bash(helm:*)",
        "Bash(psql:*)",
        "Bash(mysql:*)",
        "Bash(mongosh:*)",
        "Bash(redis-cli:*)",
        "Bash(webpack:*)",
        "Bash(vite:*)",
        "Bash(rollup:*)",
        "Bash(tsc:*)",
        "Bash(eslint:*)",
        "Bash(prettier:*)",
        "WebFetch",
        "WebSearch",
        "HTTP",
        "mcp__*",
        "Bash(rm:*)"
      ],
      "deny": [
        "Bash(rm -rf /)",
        "Bash(rm -rf /*)",
        "Bash(rm -rf ~)",
        "Bash(rm -rf ~/*)",
        "Bash(rm -rf .)",
        "Bash(rm -rf ./)",
        "Bash(rm -rf ..)",
        "Bash(rm -rf ../)",
        "Bash(rm -rf :*)",
        "Bash(sudo rm -rf:*)",
        "Bash(mv ~ /dev/null)",
        "DeleteFile(/)",
        "DeleteFile(/*)",
        "DeleteFile(.)",
        "DeleteFile(./)",
        "DeleteFile(..)",
        "DeleteFile(../)",
        "Bash(dd if=/dev/random:*)",
        "Bash(dd if=/dev/zero:*)",
        "Bash(mkfs.:*)",
        "Bash(format:*)",
        "Bash(fdisk:*)",
        "Bash(diskutil:*)",
        "Bash(chmod -R 777 /)",
        "Bash(chmod -R 000:*)",
        "Bash(chown -R:*)",
        "Bash(echo > /etc/*)",
        "Edit(/etc/passwd)",
        "Edit(/etc/shadow)",
        "Edit(/etc/sudoers)",
        "Write(/etc/passwd)",
        "Write(/etc/shadow)",
        "Write(/etc/sudoers)",
        "Bash(shutdown:*)",
        "Bash(reboot:*)",
        "Bash(halt:*)",
        "Bash(poweroff:*)",
        "Bash(init 0:*)",
        "Bash(init 6:*)",
        "Bash(systemctl poweroff:*)",
        "Bash(systemctl reboot:*)",
        "Bash(kill -9 1)",
        "Bash(killall5:*)",
        "Bash(:{ :|:& };:)",
        "Bash(while true; do:*)",
        "Bash(wget :*)",
        "Bash(wget :*)",
        "Bash(curl :*)",
        "Bash(curl :*)",
        "Bash(nc -l:*)",
        "Bash(ncat -l:*)",
        "Bash(netcat -l:*)",
        "Bash(/bin/sh -i:*)",
        "Bash(/bin/bash -i:*)",
        "Bash(> ~/.bash_history)",
        "Read(~/.ssh/id_rsa)",
        "Read(~/.ssh/id_ed25519)",
        "Read(~/.aws/credentials)",
        "Read(~/.config/gcloud/credentials)",
        "Bash(cat ~/.ssh/id_*)",
        "Bash(cat ~/.aws/credentials)",
        "Bash(git clean:*)",
        "Bash(git push :* --force:*)",
        "Bash(git push :* -f:*)",
        "Bash(git reset --hard:*)",
        "Bash(docker run --privileged:*)",
        "Bash(docker run --pid=host:*)",
        "Bash(docker run --net=host:*)",
        "Bash(docker run -v /:/host:*)",
        "Bash(apt-get remove --purge:*)",
        "Bash(apt-get autoremove --purge:*)",
        "Bash(yum remove -y:*)",
        "Bash(brew uninstall --force:*)"
      ]
    },
    "hooks": {
      "Stop": [
        {
          "matcher": "*",
          "hooks": [
            {
              "type": "command",
              "command": "afplay -v 0.7 \"/System/Library/Sounds/Glass.aiff\""
            }
          ]
        }
      ],
      "Notification": [
        {
          "matcher": "*",
          "hooks": [
            {
              "type": "command",
              "command": "afplay -v 0.7 \"/System/Library/Sounds/Glass.aiff\""
            }
          ]
        }
      ]
    },
    "model": "sonnet",
    "statusLine": {
      "type": "command",
      "command": "input=$(cat); current_dir=$(echo \"$input\" | jq -r '.workspace.current_dir'); printf '\\033[1;32m[%s@%s %s]\\033[0m ' \"$(whoami)\" \"$(hostname -s)\" \"$(basename \"$current_dir\")\""
    }
  }